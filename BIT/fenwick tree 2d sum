#include<bits/stdc++.h>
using namespace std;


/*//0 based indexed...

vector<vector<int>>bit;
int n,m;
int sum(int x, int y){
    int ret = 0;
    for(int i=x;i>=0;i=(i&(i+1))-1){
        for(int j=y;j>=0;j = (j&(j+1))-1){
            ret += bit[i][j];
        }
    }
    return ret;
}


void upd(int x, int y , int val){
    for(int i=x;i<n;i |= (i+1)){
        for(int j=y;j<m;j |= (j+1)){
            bit[i][j] += val;
        }
    }
}*/

//1 based indexed...

vector<vector<int>>bit;
int n,m;
int sum(int x, int y){
    int ret = 0;
    for(int i=x;i>0;i -= (i&-i)){
        for(int j=y;j>0;j -= (j&-j)){
            ret += bit[i][j];
        }
    }
    return ret;
}

int sum(int x1, int y1, int x2, int y2){
    return sum(x2,y2)-sum(x1-1,y2)-sum(x2 , y1-1)+sum(x1-1,y1-1);
}


void upd(int x, int y , int val){
    for(int i=x;i<=n;i += (i&-i)){
        for(int j=y;j<=m; j +=(j&-j)){
            bit[i][j] += val;
        }
    }
}

int main(){
    cin.tie(0);ios::sync_with_stdio(false);

    cin>>n>>m;
    bit.resize(n+2,vector<int>(m+2 , 0));

    int x;
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            cin>>x;
            upd(i,j,x);
        }
    }


    int t;
    cin>>t;
    while(t--){
        int x1,y1,x2,y2;
        cin>>x1>>y1>>x2>>y2;
        cout<<sum(x1,y1,x2,y2)<<endl;
    }



    return 0;
}
