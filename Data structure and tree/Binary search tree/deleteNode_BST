Node* minvalueNode(Node* node){
    Node* current = node;
    while(current and current->left != NULL){
        current = current->left;
    }
    return current;
}

// Function to delete a node from BST.
Node *deleteNode(Node *root, int key) {
    if(root == NULL){
        return root;
    }
    if(key < root -> data){
        root->left = deleteNode(root->left , key);
    }else if(key > root->data){
        root->right = deleteNode(root->right , key);
    }else{
        if(root->left == NULL and root->right){
            return NULL;
        }else if(root->left == NULL){
            Node* temp = root -> right;
            free(root);
            return temp;
        }else if(root->right == NULL){
            Node* temp = root->left;
            free(root);
            return temp;
        }
        Node* temp = minvalueNode(root->right);
        root->data = temp->data;
        root->right = deleteNode(root->right , temp->data);
    }
    return root;
}
