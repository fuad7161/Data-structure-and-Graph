struct FenwickTree{
    vector<int>bit;
    int n;
    FenwickTree(int n){
        this->n = n;
        bit.assign(n,0);
    }
    FenwickTree(vector<int> a): FenwickTree(a.size()){
        for(size_t i =0;i<a.size();i++){
            add(i,a[i]);
        }
    }

    int sum(int r){
        int ret = 0;
        while(r>=0){
            ret += bit[r];
            r = ((r&(r+1))-1);
        }
        return ret;
    }

    int sum(int l, int r){
        return sum(r) - sum(l-1);
    }

    void add(int idx, int delta){
        while(idx < n){
            bit[idx] += delta;
            idx = (idx | (idx+1));
        }
    }
};
